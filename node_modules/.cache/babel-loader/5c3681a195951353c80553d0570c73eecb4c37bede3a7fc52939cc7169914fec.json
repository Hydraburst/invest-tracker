{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\invest-tracker\\\\src\\\\components\\\\InvestForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./InvestForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InvestForm() {\n  _s();\n  const [savings, setSavings] = useState(\"\");\n  const [yearlySaving, setYearlySavings] = useState(\"\");\n  const [invInterest, setInvInterest] = useState(\"\");\n  const [invDuration, setInvDuration] = useState(\"\");\n  const resetHandler = () => {\n    setSavings(\"\");\n    setYearlySavings(\"\");\n    setInvInterest(\"\");\n    setInvDuration(\"\");\n  };\n  const calculateHandler = userInput => {\n    userInput.preventDefault();\n    // Should be triggered when form is submitted\n    // You might not directly want to bind it to the submit event on the form though...\n\n    const yearlyData = []; // per-year results\n\n    let currentSavings = +userInput[\"current-savings\"]; // feel free to change the shape of this input object!\n    const yearlyContribution = +userInput[\"yearly-contribution\"]; // as mentioned: feel free to change the shape...\n    const expectedReturn = +userInput[\"expected-return\"] / 100;\n    const duration = +userInput[\"duration\"];\n\n    // The below code calculates yearly results (total savings, interest etc)\n    for (let i = 0; i < duration; i++) {\n      const yearlyInterest = currentSavings * expectedReturn;\n      currentSavings += yearlyInterest + yearlyContribution;\n      yearlyData.push({\n        // feel free to change the shape of the data pushed to the array!\n        year: i + 1,\n        yearlyInterest: yearlyInterest,\n        savingsEndOfYear: currentSavings,\n        yearlyContribution: yearlyContribution\n      });\n    }\n    setSavings(\"\");\n    setYearlySavings(\"\");\n    setInvInterest(\"\");\n    setInvDuration(\"\");\n    // do something with yearlyData ...\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"input-group\"],\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"current-savings\",\n            children: \"Current Savings ($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"current-savings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"yearly-contribution\",\n            children: \"Yearly Savings ($)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"yearly-contribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"input-group\"],\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"expected-return\",\n            children: \"Expected Interest (%, per year)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"expected-return\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"duration\",\n            children: \"Investment Duration (years)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"duration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          className: styles.buttonAlt,\n          onClick: calculateHandler,\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: styles.button,\n          onClick: resetHandler,\n          children: \"Calculate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(InvestForm, \"6EdsozirRzGhuVlw2b0sWnWO84w=\");\n_c = InvestForm;\nvar _c;\n$RefreshReg$(_c, \"InvestForm\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","InvestForm","_s","savings","setSavings","yearlySaving","setYearlySavings","invInterest","setInvInterest","invDuration","setInvDuration","resetHandler","calculateHandler","userInput","preventDefault","yearlyData","currentSavings","yearlyContribution","expectedReturn","duration","i","yearlyInterest","push","year","savingsEndOfYear","children","className","form","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","actions","buttonAlt","onClick","button","_c","$RefreshReg$"],"sources":["C:/web/invest-tracker/src/components/InvestForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport styles from \"./InvestForm.module.css\";\r\n\r\nexport default function InvestForm() {\r\n  const [savings, setSavings] = useState(\"\");\r\n  const [yearlySaving, setYearlySavings] = useState(\"\");\r\n  const [invInterest, setInvInterest] = useState(\"\");\r\n  const [invDuration, setInvDuration] = useState(\"\");\r\n\r\n  const resetHandler = () => {\r\n    setSavings(\"\");\r\n    setYearlySavings(\"\");\r\n    setInvInterest(\"\");\r\n    setInvDuration(\"\");\r\n  };\r\n  const calculateHandler = (userInput) => {\r\n    userInput.preventDefault();\r\n    // Should be triggered when form is submitted\r\n    // You might not directly want to bind it to the submit event on the form though...\r\n\r\n    const yearlyData = []; // per-year results\r\n\r\n    let currentSavings = +userInput[\"current-savings\"]; // feel free to change the shape of this input object!\r\n    const yearlyContribution = +userInput[\"yearly-contribution\"]; // as mentioned: feel free to change the shape...\r\n    const expectedReturn = +userInput[\"expected-return\"] / 100;\r\n    const duration = +userInput[\"duration\"];\r\n\r\n    // The below code calculates yearly results (total savings, interest etc)\r\n    for (let i = 0; i < duration; i++) {\r\n      const yearlyInterest = currentSavings * expectedReturn;\r\n      currentSavings += yearlyInterest + yearlyContribution;\r\n      yearlyData.push({\r\n        // feel free to change the shape of the data pushed to the array!\r\n        year: i + 1,\r\n        yearlyInterest: yearlyInterest,\r\n        savingsEndOfYear: currentSavings,\r\n        yearlyContribution: yearlyContribution,\r\n      });\r\n    }\r\n    setSavings(\"\");\r\n    setYearlySavings(\"\");\r\n    setInvInterest(\"\");\r\n    setInvDuration(\"\");\r\n    // do something with yearlyData ...\r\n  };\r\n  return (\r\n    <div>\r\n      <form className={styles.form}>\r\n        <div className={styles[\"input-group\"]}>\r\n          <p>\r\n            <label htmlFor=\"current-savings\">Current Savings ($)</label>\r\n            <input type=\"number\" id=\"current-savings\" />\r\n          </p>\r\n          <p>\r\n            <label htmlFor=\"yearly-contribution\">Yearly Savings ($)</label>\r\n            <input type=\"number\" id=\"yearly-contribution\" />\r\n          </p>\r\n        </div>\r\n        <div className={styles[\"input-group\"]}>\r\n          <p>\r\n            <label htmlFor=\"expected-return\">\r\n              Expected Interest (%, per year)\r\n            </label>\r\n            <input type=\"number\" id=\"expected-return\" />\r\n          </p>\r\n          <p>\r\n            <label htmlFor=\"duration\">Investment Duration (years)</label>\r\n            <input type=\"number\" id=\"duration\" />\r\n          </p>\r\n        </div>\r\n        <p className={styles.actions}>\r\n          <button\r\n            type=\"reset\"\r\n            className={styles.buttonAlt}\r\n            onClick={calculateHandler}\r\n          >\r\n            Reset\r\n          </button>\r\n          <button\r\n            type=\"submit\"\r\n            className={styles.button}\r\n            onClick={resetHandler}\r\n          >\r\n            Calculate\r\n          </button>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}